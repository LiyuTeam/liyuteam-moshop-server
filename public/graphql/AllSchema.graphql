# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

# 用户账号表
type UserAccountEntity {
  _id: String
  uid: String
  account: String
  password: String
  status: Int
  isAdmin: Int
  phone: Int
  secretToken: String
  userName: String
  createdAt: Timestamp
  updatedAt: Timestamp
  comment: String
}

# The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
scalar Timestamp

# 字典值
type DictionaryValueEntity {
  fkDict: DictionaryEntity

  # 字典值名
  name: String

  # 字典值标题
  title: String

  # 字典值
  value: String

  # 字典值类型
  valueType: Int
}

# 数据字典项
type DictionaryEntity {
  _id: String
  createdAt: Timestamp
  updatedAt: Timestamp
  status: Float
  comment: String
  uid: String

  # 字典项类型
  dictType: Int

  # 字典项主Code
  mainCode: String

  # 字典项从Code
  subCode: String!

  # 字典项名
  name: String

  # 字典项标题
  title: String

  # 字典项值
  dictValues: [DictionaryValueEntity!]
}

# 增加一个数据字典
input AddDictionaryInput {
  dictType: Float = 1
  mainCode: String
  name: String
  subCode: String
  title: String
}

# 增加一个用户数据
input AddUserAccountInput {
  account: String
  password: String
}

type Query {
  # 获取多个数据字典项
  dictionaries(subCode: String, mainCode: String): [DictionaryEntity]

  # 获取单个数据字典项
  dictionary(subCode: String, mainCode: String): DictionaryEntity

  # 获取单个数据项下到多个字典值
  dictionaryValues(fkDict: String): [DictionaryValueEntity]

  # 获取用户信息
  user(account: String): [UserAccountEntity]
}

type Mutation {
  # 新增数据字典
  addDictionary(data: AddDictionaryInput): DictionaryEntity

  # 新增用户数据
  addUserAccount(data: AddUserAccountInput): UserAccountEntity
}
